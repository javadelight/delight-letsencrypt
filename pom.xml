<?xml version="1.0" encoding="UTF-8" standalone="no"?><!-- Template: Source 
	+ GWT + in workspace dependencies 27.11.2010 --><project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<groupId>org.javadelight</groupId>
	<artifactId>delight-letsencrypt</artifactId>
	<version>0.0.4</version>
	<description>Java tools to work with letsencrypt.
	</description>
	<properties>

		<module.importedPackages>
			org.junit,
			*
		</module.importedPackages>
		<module.exportedPackages>!delight.letsencrypt.internal*,
			delight.letsencrypt*
		</module.exportedPackages>
		<module.serviceDefinitions>
		</module.serviceDefinitions>
	</properties>

	<!-- Dependent Modules -->
	<dependencies>

		<dependency>
			<groupId>org.shredzone.acme4j</groupId>
			<artifactId>acme4j-client</artifactId>
			<version>2.16</version>
		</dependency>

		<dependency>
			<groupId>org.shredzone.acme4j</groupId>
			<artifactId>acme4j-utils</artifactId>
			<version>2.12</version>
		</dependency>

		<dependency>
			<groupId>org.bouncycastle</groupId>
			<artifactId>bcpg-jdk15on</artifactId>
			<version>1.67</version>
		</dependency>


		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-simple</artifactId>
			<version>1.7.25</version>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>de.mxro.file</groupId>
			<artifactId>file-api</artifactId>
			<version>0.0.7</version>
		</dependency>

		<dependency>
			<artifactId>delight-http</artifactId>
			<groupId>org.javadelight</groupId>
			<version>0.1.0</version>
		</dependency>

		<dependency>
			<artifactId>http-server-netty3</artifactId>
			<groupId>de.mxro.httpserver.netty3</groupId>
			<version>0.0.7</version>
		</dependency>

		<dependency>
			<groupId>de.mxro.process</groupId>
			<artifactId>java-start-process</artifactId>
			<version>0.1.1</version>
		</dependency>

		<dependency>
			<groupId>de.mxro</groupId>
			<artifactId>java-file-utils</artifactId>
			<version>0.0.3</version>
		</dependency>



		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.13.1</version>
			<scope>test</scope>
		</dependency>


	</dependencies>


	<!-- XXXXXXXXXXXXXX Maven declarations XXXXXXXXXXXXXXXXXX -->

	<modelVersion>4.0.0</modelVersion>
	<name>${project.artifactId}</name>
	<packaging>jar</packaging>
	<build>

		<plugins>
			
			
			
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
				<version>3.0.0</version>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>3.4</version>
				<configuration>
					<skipDeploy>true</skipDeploy>

					<reportPlugins>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-project-info-reports-plugin</artifactId>
							<version>2.7</version>
							<reports>
								<report>index</report>
								<report>project-team</report>
								<report>license</report>
								<report>mailing-list</report>
								<report>dependencies</report>
								<report>dependency-convergence</report>
								<report>plugin-management</report>
								<report>cim</report>
								<report>issue-tracking</report>
								<report>scm</report>
								<report>summary</report>
							</reports>
						</plugin>


						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-javadoc-plugin</artifactId>
							<version>2.9.1</version>
							<configuration>
								<links>
									<link>http://modules.appjangle.com/fn-api/latest/apidocs/</link>
									<link>http://modules.appjangle.com/async-api/latest/apidocs/</link>
									<link>http://modules.appjangle.com/service-api/latest/apidocs/</link>
								</links>
							</configuration>
						</plugin>

						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-jxr-plugin</artifactId>
							<version>2.1</version>
						</plugin>

						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-surefire-report-plugin</artifactId>
							<version>2.6</version>
						</plugin>

						<plugin>
							<groupId>org.codehaus.mojo</groupId>
							<artifactId>findbugs-maven-plugin</artifactId>
							<version>3.0.0</version>
							<configuration>
								<xmlOutput>true</xmlOutput>
								<!-- Optional directory to put findbugs xdoc xml report -->
								<xmlOutputDirectory>target/site</xmlOutputDirectory>
							</configuration>
						</plugin>

						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-pmd-plugin</artifactId>
							<version>2.5</version>
							<configuration>
								<linkXref>true</linkXref>
								<minimumTokens>100</minimumTokens>
								<minimumPriority>3</minimumPriority>
								<!-- Change minimum priority to see more or less messages -->
								<targetJdk>1.6</targetJdk>
							</configuration>
						</plugin>

						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-checkstyle-plugin</artifactId>
							<version>2.6</version>

						</plugin>
						<plugin>
							<groupId>org.codehaus.mojo</groupId>
							<artifactId>jdepend-maven-plugin</artifactId>
							<version>2.0-beta-2</version>
						</plugin>
						<plugin>
							<groupId>org.codehaus.mojo</groupId>
							<artifactId>cobertura-maven-plugin</artifactId>
							<version>2.4</version>
						</plugin>
						<plugin>
							<groupId>org.codehaus.mojo</groupId>
							<artifactId>taglist-maven-plugin</artifactId>
							<version>2.4</version>
						</plugin>





					</reportPlugins>
				</configuration>
			</plugin>
			
			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.4</version>
				<executions>
					<execution>
						<goals>
							<goal>attached</goal>
						</goals>
						<phase>package</phase>
						<configuration>
							<descriptors>
								<descriptor>src/assemble/distribution.xml</descriptor>
							</descriptors>

							<archive>
								<manifest>
									<mainClass>delight.letsencrypt.GetSSLCertificate</mainClass>
								</manifest>
							</archive>
						</configuration>
					</execution>
				</executions>
			</plugin>

		</plugins>

		<!-- RESOURCES -->
		<resources>


			<!-- This entry makes sure that resources, which lie in the same package 
				as Java classes, are copied into the target. Often external libraries require 
				resources, which are loaded using Class.getResource or Class.getResourceAsStream 
				and which are in a subpackage of the class. For instance, the NetBeans template 
				for the Swing Application Framework does so. -->
			<resource>
				<filtering>false</filtering>
				<directory>src/main/java</directory>
				<includes>
					<include>**</include>
				</includes>
				<excludes>
					<exclude>**/*.java</exclude>
				</excludes>
			</resource>
			<!-- This entry makes sure component definitions for OSGi declarative 
				services are copied into the destination -->
			<resource>
				<targetPath>OSGI-INF</targetPath>
				<filtering>false</filtering>
				<directory>OSGI-INF</directory>
				<includes>
					<include>**</include>
				</includes>
			</resource>
			<!-- I really do not know why know a manual entry for src/main/resources 
				is necessary? It should be included following the Maven convention. -->
			<resource>
				<filtering>false</filtering>
				<directory>src/main/resources</directory>
				<includes>
					<include>**</include>
				</includes>
			</resource>

		</resources>


	</build>



	<developers>
		<developer>
			<id>mxro</id>
			<name>Max Rohde</name>
			<email>noemail@mxro.de</email>
			<url>http://www.mxro.de/</url>
			<roles>
				<role>architect</role>
				<role>developer</role>
			</roles>
			<timezone>+10</timezone>
			<organization>pureleap</organization>
			<organizationUrl>https://www.pureleap.com</organizationUrl>
		</developer>
	</developers>

	<scm>
		<connection>scm:git:git@github.com:javadelight/delight-letsencrypt.git</connection>
		<url>https://github.com/javadelight/delight-letsencrypt</url>
		<developerConnection>scm:git:git@github.com:javadelight/delight-letsencrypt.git
		</developerConnection>
	</scm>

</project>